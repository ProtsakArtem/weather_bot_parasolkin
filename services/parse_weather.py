from statistics import mean
import requests

table_weater = {
    0: "–ß–∏—Å—Ç–µ –Ω–µ–±–æüå•",
    1: "–ü–µ—Ä–µ–≤–∞–∂–Ω–æ —è—Å–Ω–æüå§",
    2: "–ú—ñ–Ω–ª–∏–≤–∞ —Ö–º–∞—Ä–Ω—ñ—Å—Ç—å‚òÅÔ∏è",
    3: "–ü–æ—Ö–º—É—Ä–æ‚òÅÔ∏è",
    45: "–¢—É–º–∞–Ωüå´",
    48: "–¢—É–º–∞–Ω(–ú–æ–∂–ª–∏–≤–æ —ñ–Ω–µ–π)üå´",
    51: "–ú—Ä—è–∫–∞ —Å–ª–∞–±–∫–∞üò¨",
    53: "–ü–æ–º—ñ—Ä–Ω–∞ –º—Ä—è–∫–∞üò¨",
    55: "–ì—É—Å—Ç–∞ –º—Ä—è–∫–∞üò¨",
    56: "–ö—Ä–∏–∂–∞–Ω–∏–π –¥–æ—âüåß",
    57: "–ö—Ä–∏–∂–∞–Ω–∏–π –¥–æ—âüåß",
    61: "–°–ª–∞–±–∫–∏–π –¥–æ—âüåß",
    63: "–°–µ—Ä–µ–¥–Ω—ñ–π –¥–æ—âüåß",
    65: "–°–∏–ª—å–Ω–∏–π –¥–æ—âüåß",
    66: "–ö—Ä–∏–∂–∞–Ω–∏–π –¥–æ—âüåß",
    67: "–°–∏–ª—å–Ω–∏–π –∫—Ä–∏–∂–∞–Ω–∏–π –¥–æ—âüåß",
    71: "–°–ª–∞–±–∫–∏–π —Å–Ω—ñ–≥–æ–ø–∞–¥üå®",
    73: "–°–µ—Ä–µ–¥–Ω—ñ–π —Å–Ω—ñ–≥–æ–ø–∞–¥‚ùÑÔ∏è",
    75: "–°–∏–ª—å–Ω–∏–π —Å–Ω—ñ–≥–æ–ø–∞–¥‚ùÑÔ∏è",
    77: "–ö—Ä—É–ø–Ω–∏–π —Å–Ω—ñ–≥‚ùÑÔ∏è",
    80: "–î–æ—â –ª–µ–≥–∫–∏–πüå¶",
    81: "–ü–æ–º—ñ—Ä–Ω–∏–π –¥–æ—âüåß",
    82: "–°–∏–ª—å–Ω–∏–π –¥–æ—âüåß",
    85: "–ù–µ–≤–µ–ª–∏–∫–∏–π —Å–Ω—ñ–≥–æ–ø–∞–¥‚ùÑÔ∏è",
    86: "–°–∏–ª—å–Ω–∏–π —Å–Ω—ñ–≥–æ–ø–∞–¥‚ùÑÔ∏è",
    95: "–ì—Ä–æ–∑–∞ –ø–æ–º—ñ—Ä–Ω–∞‚õà",
    96: "–ì—Ä–æ–∑–∞ –∑ –Ω–µ–≤–µ–ª–∏–∫–∏–º –≥—Ä–∞–¥–æ–º‚õà",
    99: "–ì—Ä–æ–∑–∞ –∑ —Å–∏–ª—å–Ω–∏–º –≥—Ä–∞–¥–æ–º‚õà",
}


def parse_weather(latitude, longitude):
    """
    –ù–∞–¥—Å–∏–ª–∞—î –∑–∞–ø–∏—Ç –Ω–∞ API —Ç–∞ –æ—Ç—Ä–∏–º—É—î –≤—Å—ñ –¥–∞–Ω—ñ –ø—Ä–æ –ø–æ–≥–æ–¥—É –∑–∞ –∑–∞–¥–∞–Ω–∏–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
    :param latitude: float/string
    :param longitude: float/string
    :return: tuple
    –ü–æ–≤–µ—Ä—Ç–∞—î –∫–æ—Ä—Ç–µ–∂ –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏ —É—Å—ñ—Ö –ø–æ–∫–∞–∑–Ω–∏–∫—ñ–≤
    """
    url = f"https://api.open-meteo.com/v1/forecast?latitude={latitude}&longitude={longitude}&hourly=temperature_2m,precipitation_probability,windspeed_10m&daily=weathercode,sunrise,sunset,precipitation_hours&windspeed_unit=ms&forecast_days=3&timezone=auto"
    ans = requests.get(url=url).json()

    daily_avg_today, daily_avg_tomorrow, daily_avg_after_tomorrow = [table_weater[x] for x in ans["daily"]["weathercode"]]
    daily_sunrise_today, daily_sunrise_tomorrow, daily_sunrise_after_tomorrow = [x[-5:] for x in ans["daily"]["sunrise"]]
    daily_drops_today, daily_drops_tomorrow, daily_drops_after_tomorrow = ans["daily"]["precipitation_hours"]
    daily_temp_today = round(mean(ans["hourly"]["temperature_2m"][0:24]), 1)
    daily_temp_tomorrow = round(mean(ans["hourly"]["temperature_2m"][24:48]), 1)
    daily_temp_after_tomorrow = round(mean(ans["hourly"]["temperature_2m"][48:72]), 1)

    today_hour_temp = ans["hourly"]["temperature_2m"][0:24][0::3]
    tomorrow_hour_temp = ans["hourly"]["temperature_2m"][24:48][0::3]
    after_tomorrow_hour_temp = ans["hourly"]["temperature_2m"][48:72][0::3]

    today_drop_chance = ans["hourly"]["precipitation_probability"][0:24][0::3]
    tomorrow_drop_chance = ans["hourly"]["precipitation_probability"][24:48][0::3]
    after_tomorrow_drop_chance = ans["hourly"]["precipitation_probability"][48:72][0::3]

    today_windspeed = ans["hourly"]["windspeed_10m"][0:24][0::3]
    tomorrow_windspeed = ans["hourly"]["windspeed_10m"][24:48][0::3]
    after_tomorrow_windspeed = ans["hourly"]["windspeed_10m"][48:72][0::3]
    coordinates = f"{latitude} {longitude}"
    daily_drops_today = [daily_drops_today]
    daily_drops_tomorrow = [daily_drops_tomorrow]
    daily_drops_after_tomorrow = [daily_drops_after_tomorrow]

    return(coordinates, daily_avg_today, daily_avg_tomorrow, daily_avg_after_tomorrow,
                        daily_sunrise_today, daily_sunrise_tomorrow, daily_sunrise_after_tomorrow,
                        daily_drops_today, daily_drops_tomorrow, daily_drops_after_tomorrow,
                        daily_temp_today, daily_temp_tomorrow, daily_temp_after_tomorrow,
                        after_tomorrow_hour_temp, tomorrow_hour_temp, today_hour_temp,
                        today_drop_chance, tomorrow_drop_chance, after_tomorrow_drop_chance,
                        today_windspeed, tomorrow_windspeed, after_tomorrow_windspeed)
